version: 2.1

jobs:
  test:
    docker:
      - image: circleci/node:12
    parallelism: 2
    steps:
      - checkout
      - run:
          name: Delete any old node_modules
          command: |
            rm -rf node_modules/
      - run:
          name: Install dependencies
          command: |
            npm install
      - run: mkdir -p /tmp/workspace
      - run:
          name: Run tests
          command: |
            TEST_FILES="{$(circleci tests glob "./test/**/*.js" | \
             circleci tests split --split-by=timings | xargs | sed -e 's/ /,/g')}"
            echo "test files >> ${TEST_FILES}"
            echo "NODE_INDEX >> ${CIRCLE_NODE_INDEX}"
            npx hardhat coverage --testfiles "$TEST_FILES"
      - run: ls /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - cov_0
            - cov_1

  reportCoverage:
    docker:
      - image: circleci/node:12
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: npm install istanbul-combine-updated
      - run: npm install coveralls
      - run: ls /tmp/workspace/cov_0
      - run: ls /tmp/workspace/cov_1
      - run:
          command: |
           npx istanbul-combine-updated -p summary -r lcov -r html \
              /tmp/workspace/cov_0/coverage_final.json \
              /tmp/workspace/cov_1/coverage_final.json
      - run: ls coverage
      - run: ls coverage/lcov-report
      - run: cat coverage/lcov.info
      - run: cat coverage/lcov.info | node_modules/.bin/coveralls
  coverage:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Delete any old node_modules
          command: |
            rm -rf node_modules/
      - run:
          name: Install dependencies
          command: |
            npm install
      - run:
          name: Run tests
          command: |
            npx hardhat coverage
      - run:
          name: Upload coverage
          command: |
            cat coverage/lcov.info | node_modules/.bin/coveralls

workflows:
  version: 2
  build:
    jobs:
      - test
      - reportCoverage:
          requires:
              - test
