version: 2.1

jobs:
  # test:
  #   docker:
  #     - image: circleci/node:12
  #   parallelism: 2
  #   steps:
  #     - checkout
  #     - run:
  #         name: Delete any old node_modules
  #         command: |
  #           rm -rf node_modules/
  #     - run:
  #         name: Install dependencies
  #         command: |
  #           npm install
  #     - run: mkdir -p /tmp/coverage
  #     - run: mkdir ~/junit
  #     - run:
  #         name: Run tests
  #         command: |
  #           echo $(circleci tests glob "${PWD}/test/**/*.spec.js" | \
  #             circleci tests split --split-by=timings)
  #           echo "working directory = $CIRCLE_WORKING_DIRECTORY"
  #           echo "pwd = $PWD"
  #           TEST_FILES="{$(circleci tests glob "${PWD}/test/**/*.spec.js" | \
  #             circleci tests split --split-by=timings | xargs | sed -e 's/ /,/g')}"
  #           echo "test files = $TEST_FILES"
  #           npx hardhat coverage --testfiles "$TEST_FILES"
  #     - run:
  #         name: Save coverage
  #         command: |
  #           cp coverage.json /tmp/coverage/cov_$CIRCLE_NODE_INDEX.json
  #           chmod -R 777 /tmp/coverage/cov_$CIRCLE_NODE_INDEX.json
  #     - run:
  #         command: cp test-results.xml ~/junit/
  #         when: always
  #     - store_test_results:
  #         path: ~/junit
  #     - persist_to_workspace:
  #         root: /tmp/coverage
  #         paths:
  #           - cov_0.json
  #           - cov_1.json

  test_a:
    docker:
      - image: circleci/node:12
    parallelism: 2
    steps:
      - checkout
      - run:
          name: Delete any old node_modules
          command: |
            rm -rf node_modules/
      - run:
          name: Install dependencies
          command: |
            npm install
      - run: mkdir -p ~/tests/coverage
      - run:
          name: Run tests
          command: |
            TEST_FILES="{$(circleci tests glob "./test/**/*.js" | \
              circleci tests split --split-by=timings | xargs | sed -e 's/ /,/g')}"
            npx hardhat coverage --testfiles "$TEST_FILES"
      - run:
          name: Save coverage
          command: |
            cp coverage.json ~/tests/coverage/cov_$CIRCLE_NODE_INDEX.json
            chmod -R 777 ~/tests/coverage/cov_$CIRCLE_NODE_INDEX.json
          when: always
      - persist_to_workspace:
           root: ~/tests/coverage
           paths:
             - cov_0.json
             - cov_1.json

  test_b:
    docker:
      - image: circleci/node:12
    parallelism: 2
    steps:
      - checkout
      - run:
          name: Delete any old node_modules
          command: |
            rm -rf node_modules/
      - run:
          name: Install dependencies
          command: |
            npm install
      - run: mkdir -p ~/tests_b/coverage
      - run:
          name: Run tests
          command: |
            TEST_FILES="{$(circleci tests glob "./test/**/*.js" | \
              circleci tests split --split-by=timings | xargs | sed -e 's/ /,/g')}"
            npx hardhat coverage --testfiles "$TEST_FILES"
      - run:
          name: Save coverage
          command: |
            cp coverage.json ~/tests_b/coverage/cov_$CIRCLE_NODE_INDEX.json
            chmod -R 777 ~/tests_b/coverage/cov_$CIRCLE_NODE_INDEX.json
          when: always
      - persist_to_workspace:
           root: ~/tests_b/coverage
           paths:
             - cov_0.json
             - cov_1.json

  reportCoverage:
    docker:
      - image: circleci/node:12
    steps:
      - attach_workspace:
          at: /tmp/coverage
      - checkout
      - run:
          name: Delete any old node_modules
          command: |
            rm -rf node_modules/
      - run: npm install
      - run:
          name: Combine coverage reports
          command: |
            mkdir -p reports
            echo "list tests/coverage"
            ls ~/tests/coverage
            echo "list tests_b/coverage"
            ls ~/tests_b/coverage

            cp -R ~/tests/coverage/* .
            npx istanbul-combine-updated -r lcov cov_0.json cov_1.json
      - run:
          name: Upload coverage
          command: |
            cat coverage/lcov.info | node_modules/.bin/coveralls
  coverage:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Delete any old node_modules
          command: |
            rm -rf node_modules/
      - run:
          name: Install dependencies
          command: |
            npm install
      - run:
          name: Run tests
          command: |
            npx hardhat coverage
      - run:
          name: Upload coverage
          command: |
            cat coverage/lcov.info | node_modules/.bin/coveralls

workflows:
  version: 2
  build:
    jobs:
      - test_a
      - test_b
      - reportCoverage:
          requires:
              - test_a
              - test_b
